apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ceramic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ceramic
  serviceName: ceramic
  template:
    metadata:
      labels:
        app: ceramic
    spec:
      containers:
        - name: js-ceramic
          command:
            - /js-ceramic/packages/cli/bin/ceramic.js
            - daemon
            - --config
            - /config/daemon-config.json
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: db
                  name: ceramic-postgres-auth
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: ceramic-postgres-auth
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: ceramic-postgres-auth
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: ceramic-postgres-auth
          image: ceramicnetwork/js-ceramic:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v0/node/healthcheck
              port: api
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 30
          ports:
            - containerPort: 7007
              name: api
              protocol: TCP
            - containerPort: 9464
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v0/node/healthcheck
              port: api
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            limits:
              ephemeral-storage: 3Gi
            requests:
              ephemeral-storage: 3Gi
          volumeMounts:
            - mountPath: /config
              name: config-volume
            - mountPath: /js-ceramic-data
              name: js-ceramic-data
        - name: postgres
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: db
                  name: ceramic-postgres-auth
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: ceramic-postgres-auth
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: ceramic-postgres-auth
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: ceramic-postgres-auth
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 1Gi
            requests:
              cpu: 250m
              ephemeral-storage: 1Gi
              memory: 1Gi
          securityContext:
            runAsGroup: 70
            runAsUser: 70
          volumeMounts:
            - mountPath: /var/lib/postgresql
              name: postgres-data
              subPath: ceramic_data
        - name: rust-ceramic
          envFrom:
            - configMapRef:
                name: rust-ceramic-env
          image: public.ecr.aws/r5b3e0r5/3box/ceramic-one:0.14.0
          imagePullPolicy: Always
          ports:
            - containerPort: 4001
              name: swarm-tcp
              protocol: TCP
            - containerPort: 5001
              name: rpc
              protocol: TCP
            - containerPort: 9465
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              ephemeral-storage: 1Gi
              memory: 1Gi
            requests:
              cpu: "1"
              ephemeral-storage: 1Gi
              memory: 1Gi
          volumeMounts:
            - mountPath: /data/rust-ceramic
              name: rust-ceramic-data
      initContainers:
        - name: init-ceramic-config
          command:
            - /bin/bash
            - -c
            - /js-ceramic-init/js-ceramic-init.sh
          env:
            - name: CERAMIC_ADMIN_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  key: private-key
                  name: ceramic-admin
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: db
                  name: ceramic-postgres-auth
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: ceramic-postgres-auth
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: ceramic-postgres-auth
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: ceramic-postgres-auth
          envFrom:
            - configMapRef:
                name: js-ceramic-env
          image: ceramicnetwork/composedb-cli:latest
          imagePullPolicy: Always
          resources:
            limits:
              ephemeral-storage: 3Gi
            requests:
              ephemeral-storage: 3Gi
          volumeMounts:
            - mountPath: /config
              name: config-volume
            - mountPath: /js-ceramic-init
              name: js-ceramic-init
      securityContext:
        fsGroup: 70
      volumes:
        - emptyDir: {}
          name: config-volume
        - configMap:
            defaultMode: 493
            name: js-ceramic-init
          name: js-ceramic-init
        - name: js-ceramic-data
          persistentVolumeClaim:
            claimName: js-ceramic-data
        - name: rust-ceramic-data
          persistentVolumeClaim:
            claimName: rust-ceramic-data
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: js-ceramic-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
      status:
        phase: Pending
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: rust-ceramic-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: postgres-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi

